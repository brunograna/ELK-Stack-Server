input { 
  beats { 
    port => 5050
  } 
}
filter {  
  mutate {
    id => "[Meaningful label for your project, not repeated in any other config files] remove ANSI color codes"
    gsub => ["message", "\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]", ""]
  }
  mutate {
    gsub => ["message", "(\\r)|(\\n)|(\\tat)", " "]
  }
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:log-time} *%{LOGLEVEL:log-level} \[%{DATA:application-name},%{DATA:trace-id},%{DATA:span-id}\] \[%{DATA:thread}\] \[%{DATA:class-name}\] : %{GREEDYDATA:message}" }
    # match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} *%{LOGLEVEL:log-level} \[%{DATA:application-name}\] \[%{DATA:thread}\] \[%{DATA:class-name}\] : %{GREEDYDATA:message}" }
    overwrite => [ "message" ]
  }
  date {
    match => [ "log-time", "ISO8601" ]
    target => "log-time"
  }
  mutate {
    add_field => { "new-log-time" => "%{log-time}" }
    remove_field => ["log-time"]
  }
  date {
    match => [ "new-log-time" , "ISO8601" , "yyyy-MM-dd HH:mm:ss.SSS" ]
    target => "@timestamp"
    timezone => "UTC"
  }
  if "_grokparsefailure" in [tags] {
    drop { }
  }
}
output {
  elasticsearch { hosts => ["localhost:9200"]
    index => "osklen_index"
  }
}